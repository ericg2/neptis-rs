/*
 * Neptis
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileOutputDto {
    #[serde(rename = "path", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub path: Option<Option<String>>,
    #[serde(rename = "data", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub data: Option<Option<String>>,
    #[serde(rename = "isGZIP", skip_serializing_if = "Option::is_none")]
    pub is_gzip: Option<bool>,
    #[serde(rename = "isBase64", skip_serializing_if = "Option::is_none")]
    pub is_base64: Option<bool>,
    #[serde(rename = "isDirectory", skip_serializing_if = "Option::is_none")]
    pub is_directory: Option<bool>,
}

impl FileOutputDto {
    pub fn new() -> FileOutputDto {
        FileOutputDto {
            path: None,
            data: None,
            is_gzip: None,
            is_base64: None,
            is_directory: None,
        }
    }
}

