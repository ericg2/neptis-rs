/*
 * Neptis
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserSummaryDto {
    #[serde(
        rename = "userName",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_name: Option<Option<String>>,
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    #[serde(
        rename = "lastLogin",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub last_login: Option<Option<String>>,
    #[serde(
        rename = "emailAddress",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub email_address: Option<Option<String>>,
    #[serde(rename = "maxDataBytes", skip_serializing_if = "Option::is_none")]
    pub max_data_bytes: Option<i64>,
    #[serde(rename = "maxRepoBytes", skip_serializing_if = "Option::is_none")]
    pub max_repo_bytes: Option<i64>,
    #[serde(
        rename = "apiCalls",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub api_calls: Option<Option<i64>>,
    #[serde(
        rename = "apiBytes",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub api_bytes: Option<Option<i64>>,
    #[serde(
        rename = "apiLastCall",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub api_last_call: Option<Option<String>>,
    #[serde(rename = "usedDataBytes", skip_serializing_if = "Option::is_none")]
    pub used_data_bytes: Option<i64>,
    #[serde(rename = "usedRepoBytes", skip_serializing_if = "Option::is_none")]
    pub used_repo_bytes: Option<i64>,
    #[serde(rename = "freeDataBytes", skip_serializing_if = "Option::is_none")]
    pub free_data_bytes: Option<i64>,
    #[serde(rename = "freeRepoBytes", skip_serializing_if = "Option::is_none")]
    pub free_repo_bytes: Option<i64>,
    #[serde(
        rename = "permissions",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub permissions: Option<Option<Vec<String>>>,
    #[serde(
        rename = "allJobs",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub all_jobs: Option<Option<Vec<models::RepoDataJobDto>>>,
    #[serde(
        rename = "dataPoints",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub data_points: Option<Option<Vec<models::DataPointDto>>>,
    #[serde(
        rename = "repoPoints",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub repo_points: Option<Option<Vec<models::RepoPointDto>>>,
    #[serde(
        rename = "autoJobs",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub auto_jobs: Option<Option<Vec<models::AutoJobConfigDto>>>,
}

impl UserSummaryDto {
    pub fn new() -> UserSummaryDto {
        UserSummaryDto {
            user_name: None,
            date_created: None,
            last_login: None,
            email_address: None,
            max_data_bytes: None,
            max_repo_bytes: None,
            api_calls: None,
            api_bytes: None,
            api_last_call: None,
            used_data_bytes: None,
            used_repo_bytes: None,
            free_data_bytes: None,
            free_repo_bytes: None,
            permissions: None,
            all_jobs: None,
            data_points: None,
            repo_points: None,
            auto_jobs: None,
        }
    }
}
