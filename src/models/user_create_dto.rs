/*
 * Neptis
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserCreateDto {
    #[serde(rename = "userName")]
    pub user_name: String,
    #[serde(rename = "password")]
    pub password: String,
    #[serde(rename = "emailAddress")]
    pub email_address: String,
    #[serde(rename = "isPrivate")]
    pub is_private: bool,
    #[serde(rename = "maxDataBytes")]
    pub max_data_bytes: i64,
    #[serde(rename = "maxRepoBytes")]
    pub max_repo_bytes: i64,
    #[serde(
        rename = "permissions",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub permissions: Option<Option<Vec<String>>>,
}

impl UserCreateDto {
    pub fn new(
        user_name: String,
        password: String,
        email_address: String,
        is_private: bool,
        max_data_bytes: i64,
        max_repo_bytes: i64,
    ) -> UserCreateDto {
        UserCreateDto {
            user_name,
            password,
            email_address,
            is_private,
            max_data_bytes,
            max_repo_bytes,
            permissions: None,
        }
    }
}
