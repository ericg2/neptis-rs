/*
 * Neptis
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use super::{Error, configuration};
use crate::apis::configuration::ApiBuilder;
use crate::{apis::ResponseContent, models};
use reqwest;
use serde::{Deserialize, Serialize};
use serde_json::Value;

/// struct for typed errors of method [`delete_one_auto_job`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum DeleteOneAutoJobError {
    UnknownValue(serde_json::Value),
}

/// struct for typed errors of method [`get_all_auto_jobs`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum GetAllAutoJobsError {
    UnknownValue(serde_json::Value),
}

/// struct for typed errors of method [`update_one_auto_job`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum UpdateOneAutoJobError {
    UnknownValue(serde_json::Value),
}

pub async fn delete_one_auto_job(
    configuration: &configuration::Configuration,
    auto_job_get_dto: Option<models::AutoJobGetDto>,
) -> Result<bool, Error<DeleteOneAutoJobError>> {
    // add a prefix to parameters to efficiently prevent name collisions
    let p_auto_job_get_dto = auto_job_get_dto;

    let uri_str = format!("{}/api/autojobs", configuration.base_path);
    ApiBuilder::new(&configuration, reqwest::Method::DELETE, &uri_str)
        .with_body(p_auto_job_get_dto)
        .execute()
        .await
}

pub async fn get_all_auto_jobs(
    configuration: &configuration::Configuration,
) -> Result<Vec<models::AutoJobConfigDto>, Error<GetAllAutoJobsError>> {
    let uri_str = format!("{}/api/autojobs", configuration.base_path);
    ApiBuilder::new(&configuration, reqwest::Method::GET, &uri_str)
        .execute()
        .await
}

pub async fn update_one_auto_job(
    configuration: &configuration::Configuration,
    auto_job_put_dto: Option<models::AutoJobPutDto>,
) -> Result<models::AutoJobConfigDto, Error<UpdateOneAutoJobError>> {
    // add a prefix to parameters to efficiently prevent name collisions
    let p_auto_job_put_dto = auto_job_put_dto;

    let uri_str = format!("{}/api/autojobs", configuration.base_path);
    ApiBuilder::new(&configuration, reqwest::Method::PUT, &uri_str)
        .with_body(p_auto_job_put_dto)
        .execute()
        .await
}
