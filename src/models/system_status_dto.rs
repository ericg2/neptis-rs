/*
 * Neptis
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SystemStatusDto {
    #[serde(rename = "cpUs", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cp_us: Option<Option<Vec<models::CpuItemDto>>>,
    #[serde(rename = "averageCPU", skip_serializing_if = "Option::is_none")]
    pub average_cpu: Option<Box<models::CpuItemDto>>,
    #[serde(rename = "apiUptime", skip_serializing_if = "Option::is_none")]
    pub api_uptime: Option<String>,
    #[serde(rename = "systemUptime", skip_serializing_if = "Option::is_none")]
    pub system_uptime: Option<String>,
    #[serde(rename = "apiVersion", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<Option<String>>,
    #[serde(rename = "kernelVersion", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub kernel_version: Option<Option<String>>,
    #[serde(rename = "totalUsersRegistered", skip_serializing_if = "Option::is_none")]
    pub total_users_registered: Option<i64>,
    #[serde(rename = "totalDataPoints", skip_serializing_if = "Option::is_none")]
    pub total_data_points: Option<i64>,
    #[serde(rename = "totalRepoPoints", skip_serializing_if = "Option::is_none")]
    pub total_repo_points: Option<i64>,
    #[serde(rename = "totalDataBytes", skip_serializing_if = "Option::is_none")]
    pub total_data_bytes: Option<i64>,
    #[serde(rename = "totalRepoBytes", skip_serializing_if = "Option::is_none")]
    pub total_repo_bytes: Option<i64>,
    #[serde(rename = "allocatedDataBytes", skip_serializing_if = "Option::is_none")]
    pub allocated_data_bytes: Option<i64>,
    #[serde(rename = "allocatedRepoBytes", skip_serializing_if = "Option::is_none")]
    pub allocated_repo_bytes: Option<i64>,
    #[serde(rename = "totalJobs", skip_serializing_if = "Option::is_none")]
    pub total_jobs: Option<i64>,
    #[serde(rename = "runningJobs", skip_serializing_if = "Option::is_none")]
    pub running_jobs: Option<i64>,
}

impl SystemStatusDto {
    pub fn new() -> SystemStatusDto {
        SystemStatusDto {
            cp_us: None,
            average_cpu: None,
            api_uptime: None,
            system_uptime: None,
            api_version: None,
            kernel_version: None,
            total_users_registered: None,
            total_data_points: None,
            total_repo_points: None,
            total_data_bytes: None,
            total_repo_bytes: None,
            allocated_data_bytes: None,
            allocated_repo_bytes: None,
            total_jobs: None,
            running_jobs: None,
        }
    }
}

