/*
 * Neptis
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessagePostDto {
    #[serde(
        rename = "toUsers",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub to_users: Option<Option<Vec<String>>>,
    #[serde(
        rename = "subject",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub subject: Option<Option<String>>,
    #[serde(rename = "text")]
    pub text: String,
    #[serde(rename = "highPriority", skip_serializing_if = "Option::is_none")]
    pub high_priority: Option<bool>,
}

impl MessagePostDto {
    pub fn new(text: String) -> MessagePostDto {
        MessagePostDto {
            to_users: None,
            subject: None,
            text,
            high_priority: None,
        }
    }
}
